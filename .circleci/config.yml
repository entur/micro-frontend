version: 2.1
aliases:
- &ssh-fingerprint
    fingerprints:
      - "ae:83:a5:6c:93:c9:16:57:ec:21:b9:6f:9c:5a:10:9c"
- &install-dependencies
  name: Install Node Dependencies
  command: npm install
- &test
  name: Test
  command: npm run test
- &build
  name: Build
  command: npm run build
- &save-dependency-cache
  paths:
  - node_modules
  key: node_modules-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
- &restore-dependency-cache
  name: Restore dependency cache
  keys:
  - node_modules-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
- &sonar-scanner
  name: Sonar scanner
  command: |
    sonar-scanner \
        -Dsonar.projectKey=entur_${CIRCLE_PROJECT_REPONAME} \
        -Dsonar.organization=${SONAR_ORG} \
        -Dsonar.projectName=${CIRCLE_PROJECT_REPONAME} \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=${ENTUR_SONAR_PASSWORD} \
        -Dsonar.sources=src \
        -Dsonar.cpd.exclusions=src/i18n/translations/*.ts \
        -Dsonar.tests=src \
        -Dsonar.test.inclusions=src/**/*.spec.ts,src/**/*.spec.tsx,src/**/*.test.ts,src/**/*.test.tsx \
        -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
        -Dsonar.testExecutionReportPaths=test-report.xml
- &sonar-scanner-pull-request
  name: Sonar scanner pull request
  command: |
    sonar-scanner \
        -Dsonar.projectKey=entur_${CIRCLE_PROJECT_REPONAME} \
        -Dsonar.organization=${SONAR_ORG} \
        -Dsonar.projectName=${CIRCLE_PROJECT_REPONAME} \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=${ENTUR_SONAR_PASSWORD} \
        -Dsonar.sources=src \
        -Dsonar.cpd.exclusions=src/i18n/translations/*.ts \
        -Dsonar.tests=src \
        -Dsonar.test.inclusions=src/**/*.spec.ts,src/**/*.spec.tsx,src/**/*.test.ts,src/**/*.test.tsx \
        -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
        -Dsonar.testExecutionReportPaths=test-report.xml \
        -Dsonar.pullrequest.key=${CIRCLE_PULL_REQUEST##*/} \
        -Dsonar.pullrequest.branch=$CIRCLE_BRANCH \
        -Dsonar.pullrequest.base=master

executors:
    circleci-toolbox:
      docker:
        - image: eu.gcr.io/entur-system-1287/circleci-toolbox-image-java11
          auth:
            username: _json_key
            password: $DOCKER_PASSWORD

jobs:
  install:
    executor: circleci-toolbox
    steps:
    - checkout
    - run: *install-dependencies
    - save_cache: *save-dependency-cache
  test-build:
    executor: circleci-toolbox
    steps:
    - checkout
    - restore_cache: *restore-dependency-cache
    - run: *build
    - run: *test
    # - run: *sonar-scanner-pull-request
    - store_test_results:
        path: test-report.xml
  build:
    executor: circleci-toolbox
    steps:
    - checkout
    - restore_cache: *restore-dependency-cache
    - run: *build
    - run: *test
    # - run: *sonar-scanner
    - store_test_results:
        path: test-report.xml
workflows:
  install-test-build-deploy:
    jobs:
    - install:
        name: npm-install
        context: org-carbon
    - test-build:
        name: npm-test-build
        context: org-carbon
        requires:
        - npm-install
        filters:
          branches:
            ignore:
            - master
    - build:
        name: npm-build
        context: global
        requires:
        - npm-install
        filters:
          branches:
            only:
            - master
